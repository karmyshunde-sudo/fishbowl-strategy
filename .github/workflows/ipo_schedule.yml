name: 新股申购信息推送

on:
  schedule:
    # 每个交易日早上10:25（北京时间）执行（UTC 2:25，周一至周五）
    - cron: '25 2 * * 1-5'
  workflow_dispatch:  # 支持手动触发

jobs:
  check_trading_day:
    runs-on: ubuntu-latest
    outputs:
      is_trading_day: ${{ steps.check.outputs.is_trading_day }}
    steps:
      - name: 检查是否为交易日（北京时间）
        id: check
        run: |
          # 强制设置时区为北京时间（关键修复）
          export TZ="Asia/Shanghai"
          today=$(date +%Y-%m-%d)
          weekday=$(date +%u)  # 1=周一, 5=周五, 6=周六, 7=周日
          precise_time=$(date "+%Y-%m-%d %H:%M:%S")
          
          echo "当前北京精确时间：$precise_time（周$weekday）"
          
          # 判断是否为周末
          if [ $weekday -ge 6 ]; then
            echo "is_trading_day=false" >> $GITHUB_OUTPUT
            echo "今天是周末，非交易日"
            exit 0
          fi
          
          # 节假日列表（格式：YYYY-MM-DD）
          holidays=(
            "2025-01-01" "2025-01-02" "2025-01-03"  # 元旦
            "2025-04-04" "2025-04-05"              # 清明
            "2025-05-01" "2025-05-02" "2025-05-03"  # 劳动节
            "2025-10-01" "2025-10-02" "2025-10-03" "2025-10-04" "2025-10-05"  # 国庆
          )
          
          # 打印节假日列表用于调试
          echo "节假日列表: ${holidays[*]}"
          
          # 检查当前日期是否为节假日
          if [[ " ${holidays[@]} " =~ " $today " ]]; then
            echo "is_trading_day=false" >> $GITHUB_OUTPUT
            echo "今天是节假日，非交易日"
          else
            echo "is_trading_day=true" >> $GITHUB_OUTPUT
            echo "今天是交易日"
          fi
          
          # 强制输出判断结果
          echo "最终判断结果: is_trading_day=${{ steps.check.outputs.is_trading_day }}"

  fetch_and_push_ipo:
    needs: check_trading_day
    if: needs.check_trading_day.outputs.is_trading_day == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4
      
      - name: 设置Python环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: 安装依赖
        run: pip install -r requirements.txt
      
      - name: 执行新股信息爬取与推送
        env:
          WECHAT_WEBHOOK: ${{ secrets.WECHAT_WEBHOOK }}
        run: python main_ipo.py
      
      - name: 上传日志
        uses: actions/upload-artifact@v3
        with:
          name: ipo-logs
          path: logs/
