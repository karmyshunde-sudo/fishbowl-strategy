name: 鱼盆模型ETF量化策略调度

on:
  schedule:
    - cron: '0 8 * * 5'    # 每周五更新股票池（UTC 8:00 = 北京时间16:00）
    - cron: '0 3 * * 1-5'  # 每日推送股票池（UTC 3:00 = 北京时间11:00）
    - cron: '30 5 * * 1-5' # 策略执行（UTC 5:30 = 北京时间13:30）
  workflow_dispatch:
    inputs:
      task:
        description: '手动触发任务类型'
        required: true
        type: choice
        options:
          - test_push
          - manual_push_pool
          - force_execute
          - reset_position
          - push_ipo_info
          - check_arbitrage

jobs:
  check_trading_day:
    runs-on: ubuntu-latest
    outputs:
      is_trading_day: ${{ steps.check.outputs.is_trading_day }}
    steps:
      - name: 检查是否为交易日（北京时间）
        id: check
        run: |
          # 转换为北京时间
          today=$(date -d "UTC+8" +%Y-%m-%d)
          weekday=$(date -d "UTC+8" +%u)  # 1=周一, 5=周五, 6=周六, 7=周日
          echo "当前北京时间: $today (周$weekday)"
          
          # 判断是否为周末
          if [ $weekday -ge 6 ]; then
            echo "is_trading_day=false" >> $GITHUB_OUTPUT
            echo "今天是周末，非交易日"
            exit 0
          fi
          
          # 节假日列表（格式：YYYY-MM-DD）
          holidays=(
            "2025-01-01" "2025-01-02" "2025-01-03"  # 元旦
            "2025-04-04" "2025-04-05"              # 清明
            "2025-05-01" "2025-05-02" "2025-05-03"  # 劳动节
            "2025-10-01" "2025-10-02" "2025-10-03" "2025-10-04" "2025-10-05"  # 国庆
          )
          
          # 检查当前日期是否为节假日
          if [[ " ${holidays[@]} " =~ " $today " ]]; then
            echo "is_trading_day=false" >> $GITHUB_OUTPUT
            echo "今天是节假日，非交易日"
          else
            echo "is_trading_day=true" >> $GITHUB_OUTPUT
            echo "今天是交易日"
          fi

  update_stock_pool:
    needs: check_trading_day
    if: (github.event_name == 'workflow_dispatch' && github.event.inputs.task == 'manual_push_pool') || 
        (github.event.schedule == '0 8 * * 5' && needs.check_trading_day.outputs.is_trading_day == 'true')
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4
      
      - name: 设置Python环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: 安装依赖
        run: pip install -r requirements.txt
      
      - name: 执行股票池更新
        env:
          TUSHARE_API_KEY: ${{ secrets.TUSHARE_API_KEY }}
        run: python main.py --task update_stock_pool
      
      - name: 提交更新的股票池文件
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Auto update stock pool"
          file_pattern: "data/stock_pool/*.json"

  push_stock_pool:
    needs: [check_trading_day, update_stock_pool]
    if: (github.event_name == 'workflow_dispatch' && github.event.inputs.task == 'manual_push_pool') || 
        (github.event.schedule == '0 3 * * 1-5' && needs.check_trading_day.outputs.is_trading_day == 'true')
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4
      
      - name: 设置Python环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: 安装依赖
        run: pip install -r requirements.txt
      
      - name: 推送股票池消息
        env:
          WECHAT_WEBHOOK: ${{ secrets.WECHAT_WEBHOOK }}
        run: python main.py --task push_stock_pool

  execute_strategy:
    needs: check_trading_day
    if: (github.event_name == 'workflow_dispatch' && github.event.inputs.task == 'force_execute') || 
        (github.event.schedule == '30 5 * * 1-5' && needs.check_trading_day.outputs.is_trading_day == 'true')
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4
      
      - name: 设置Python环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: 安装依赖
        run: pip install -r requirements.txt
      
      - name: 执行策略检查
        env:
          WECHAT_WEBHOOK: ${{ secrets.WECHAT_WEBHOOK }}
          TUSHARE_API_KEY: ${{ secrets.TUSHARE_API_KEY }}
        run: python main.py --task execute_strategy

  check_arbitrage:
    needs: check_trading_day
    if: (github.event_name == 'workflow_dispatch' && github.event.inputs.task == 'check_arbitrage') || 
        (contains(github.event.schedule, '30 1') || contains(github.event.schedule, '0 2') || contains(github.event.schedule, '30 2') || contains(github.event.schedule, '0 3') || contains(github.event.schedule, '30 3') || contains(github.event.schedule, '0 5') || contains(github.event.schedule, '0 6') || contains(github.event.schedule, '30 6') || contains(github.event.schedule, '0 7')) && needs.check_trading_day.outputs.is_trading_day == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4
      
      - name: 设置Python环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: 安装依赖
        run: pip install -r requirements.txt
      
      - name: 执行套利检查
        env:
          WECHAT_WEBHOOK: ${{ secrets.WECHAT_WEBHOOK }}
        run: python main.py --task check_arbitrage

  test_push:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.task == 'test_push'
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4
      
      - name: 设置Python环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: 安装依赖
        run: pip install -r requirements.txt
      
      - name: 发送测试消息
        env:
          WECHAT_WEBHOOK: ${{ secrets.WECHAT_WEBHOOK }}
        run: python main.py --task test_push

  reset_position:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.task == 'reset_position'
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4
      
      - name: 设置Python环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: 安装依赖
        run: pip install -r requirements.txt
      
      - name: 重置仓位
        run: python main.py --task reset_position
      
      - name: 提交仓位重置结果
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Reset all positions (test)"
          file_pattern: "data/transactions/*.json"

  push_ipo_info:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.task == 'push_ipo_info'
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4
      
      - name: 设置Python环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: 安装依赖
        run: pip install -r requirements.txt
      
      - name: 推送新股信息
        env:
          WECHAT_WEBHOOK: ${{ secrets.WECHAT_WEBHOOK }}
        run: python main.py --task push_ipo_info
